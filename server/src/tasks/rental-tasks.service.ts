import { Injectable } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { LoggerService } from '../logger/logger.service';
import { CellRentalsService } from '../cell-rentals/cell-rentals.service';

@Injectable()
export class RentalTasksService {
  constructor(
    private readonly logger: LoggerService,
    private readonly cellRentalsService: CellRentalsService,
  ) {
    this.logger.log('RentalTasksService instantiated', 'RentalTasksService');
  }

  @Cron(CronExpression.EVERY_5_MINUTES)
  async handleAutomaticStatusUpdates() {
    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –∞—Ä–µ–Ω–¥—ã
      const { updatedCount } = await this.cellRentalsService.updateAllRentalStatuses();
      this.logger.log(
        `üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: –æ–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} —Å—Ç–∞—Ç—É—Å–æ–≤`,
        'RentalTasksService'
      );

      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
      const { syncedCount } = await this.cellRentalsService.syncAllRentalVisualStatuses();
      this.logger.log(
        `üé® –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${syncedCount} —Å—Ç–∞—Ç—É—Å–æ–≤`,
        'RentalTasksService'
      );
    } catch (error) {
      this.logger.error(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –∞—Ä–µ–Ω–¥:',
        error.stack,
        'RentalTasksService'
      );
    }
  }
} 